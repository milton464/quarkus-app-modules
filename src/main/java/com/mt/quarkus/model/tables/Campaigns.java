/*
 * This file is generated by jOOQ.
 */
package com.mt.quarkus.model.tables;


import java.time.LocalDateTime;
import java.util.UUID;
import java.util.function.Function;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Function17;
import org.jooq.Identity;
import org.jooq.JSON;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Records;
import org.jooq.Row17;
import org.jooq.Schema;
import org.jooq.SelectField;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;

import com.mt.quarkus.ByteArrayToUUIDConverter;
import com.mt.quarkus.model.BulkEmailTenant_01;
import com.mt.quarkus.model.Keys;
import com.mt.quarkus.model.enums.CampaignsEmailThreads;
import com.mt.quarkus.model.enums.CampaignsIsFavourite;
import com.mt.quarkus.model.enums.CampaignsStatus;
import com.mt.quarkus.model.records.CampaignsRecord;



/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Campaigns extends TableImpl<CampaignsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>bulk_email_tenant_01.campaigns</code>
     */
    public static final Campaigns CAMPAIGNS = new Campaigns();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CampaignsRecord> getRecordType() {
        return CampaignsRecord.class;
    }

    /**
     * The column <code>bulk_email_tenant_01.campaigns.id</code>.
     */
    public final TableField<CampaignsRecord, ULong> ID = createField(DSL.name("id"), SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>bulk_email_tenant_01.campaigns.uid</code>.
     */
    public final TableField<CampaignsRecord, UUID> UID = createField(DSL.name("uid"), SQLDataType.BINARY(16).nullable(false), this, "", new ByteArrayToUUIDConverter());

    /**
     * The column <code>bulk_email_tenant_01.campaigns.user_id</code>.
     */
    public final TableField<CampaignsRecord, ULong> USER_ID = createField(DSL.name("user_id"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>bulk_email_tenant_01.campaigns.team_id</code>.
     */
    public final TableField<CampaignsRecord, ULong> TEAM_ID = createField(DSL.name("team_id"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>bulk_email_tenant_01.campaigns.agency_id</code>.
     */
    public final TableField<CampaignsRecord, ULong> AGENCY_ID = createField(DSL.name("agency_id"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>bulk_email_tenant_01.campaigns.title</code>.
     */
    public final TableField<CampaignsRecord, String> TITLE = createField(DSL.name("title"), SQLDataType.VARCHAR(191).nullable(false), this, "");

    /**
     * The column <code>bulk_email_tenant_01.campaigns.timezone</code>.
     */
    public final TableField<CampaignsRecord, String> TIMEZONE = createField(DSL.name("timezone"), SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>bulk_email_tenant_01.campaigns.status</code>.
     */
    public final TableField<CampaignsRecord, CampaignsStatus> STATUS = createField(DSL.name("status"), SQLDataType.VARCHAR(8).nullable(false).defaultValue(DSL.inline("ACTIVE", SQLDataType.VARCHAR)).asEnumDataType(com.mt.quarkus.model.enums.CampaignsStatus.class), this, "");

    /**
     * The column <code>bulk_email_tenant_01.campaigns.is_favourite</code>.
     */
    public final TableField<CampaignsRecord, CampaignsIsFavourite> IS_FAVOURITE = createField(DSL.name("is_favourite"), SQLDataType.VARCHAR(3).nullable(false).defaultValue(DSL.inline("NO", SQLDataType.VARCHAR)).asEnumDataType(com.mt.quarkus.model.enums.CampaignsIsFavourite.class), this, "");

    /**
     * The column <code>bulk_email_tenant_01.campaigns.email_threads</code>.
     */
    public final TableField<CampaignsRecord, CampaignsEmailThreads> EMAIL_THREADS = createField(DSL.name("email_threads"), SQLDataType.VARCHAR(13).nullable(false).defaultValue(DSL.inline("SINGLE_THREAD", SQLDataType.VARCHAR)).asEnumDataType(com.mt.quarkus.model.enums.CampaignsEmailThreads.class), this, "");

    /**
     * The column
     * <code>bulk_email_tenant_01.campaigns.common_email_subject</code>.
     */
    public final TableField<CampaignsRecord, String> COMMON_EMAIL_SUBJECT = createField(DSL.name("common_email_subject"), SQLDataType.VARCHAR(1024), this, "");

    /**
     * The column <code>bulk_email_tenant_01.campaigns.api_key</code>.
     */
    public final TableField<CampaignsRecord, String> API_KEY = createField(DSL.name("api_key"), SQLDataType.VARCHAR(30).nullable(false), this, "");

    /**
     * The column <code>bulk_email_tenant_01.campaigns.start_time</code>.
     */
    public final TableField<CampaignsRecord, LocalDateTime> START_TIME = createField(DSL.name("start_time"), SQLDataType.LOCALDATETIME(0), this, "");

    /**
     * The column <code>bulk_email_tenant_01.campaigns.pause_time</code>.
     */
    public final TableField<CampaignsRecord, LocalDateTime> PAUSE_TIME = createField(DSL.name("pause_time"), SQLDataType.LOCALDATETIME(0), this, "");

    /**
     * The column <code>bulk_email_tenant_01.campaigns.setting_infos</code>.
     * carry_on_campaign Yes,No DEFAULT Yes,prevent_previous_followup Yes ,No
     * DEFAULT Yes,sent_immediate_after_resume Yes,No DEFAULT
     * Yes,is_continue_after_fail Yes,No DEFAULT Yes,real_campaign Yes,No
     * DEFAULT Yes,edit_warning_close DEFAULT No
     */
    public final TableField<CampaignsRecord, JSON> SETTING_INFOS = createField(DSL.name("setting_infos"), SQLDataType.JSON.nullable(false), this, "carry_on_campaign Yes,No DEFAULT Yes,prevent_previous_followup Yes ,No DEFAULT Yes,sent_immediate_after_resume Yes,No DEFAULT Yes,is_continue_after_fail Yes,No DEFAULT Yes,real_campaign Yes,No DEFAULT Yes,edit_warning_close DEFAULT No");

    /**
     * The column <code>bulk_email_tenant_01.campaigns.created_at</code>.
     */
    public final TableField<CampaignsRecord, LocalDateTime> CREATED_AT = createField(DSL.name("created_at"), SQLDataType.LOCALDATETIME(0).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>bulk_email_tenant_01.campaigns.updated_at</code>.
     */
    public final TableField<CampaignsRecord, LocalDateTime> UPDATED_AT = createField(DSL.name("updated_at"), SQLDataType.LOCALDATETIME(0).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "");

    private Campaigns(Name alias, Table<CampaignsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Campaigns(Name alias, Table<CampaignsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>bulk_email_tenant_01.campaigns</code> table
     * reference
     */
    public Campaigns(String alias) {
        this(DSL.name(alias), CAMPAIGNS);
    }

    /**
     * Create an aliased <code>bulk_email_tenant_01.campaigns</code> table
     * reference
     */
    public Campaigns(Name alias) {
        this(alias, CAMPAIGNS);
    }

    /**
     * Create a <code>bulk_email_tenant_01.campaigns</code> table reference
     */
    public Campaigns() {
        this(DSL.name("campaigns"), null);
    }

    public <O extends Record> Campaigns(Table<O> child, ForeignKey<O, CampaignsRecord> key) {
        super(child, key, CAMPAIGNS);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : BulkEmailTenant_01.BULK_EMAIL_TENANT_01;
    }

    @Override
    public Identity<CampaignsRecord, ULong> getIdentity() {
        return (Identity<CampaignsRecord, ULong>) super.getIdentity();
    }

    @Override
    public UniqueKey<CampaignsRecord> getPrimaryKey() {
        return Keys.KEY_CAMPAIGNS_PRIMARY;
    }

    @Override
    public Campaigns as(String alias) {
        return new Campaigns(DSL.name(alias), this);
    }

    @Override
    public Campaigns as(Name alias) {
        return new Campaigns(alias, this);
    }

    @Override
    public Campaigns as(Table<?> alias) {
        return new Campaigns(alias.getQualifiedName(), this);
    }

    /**
     * Rename this table
     */
    @Override
    public Campaigns rename(String name) {
        return new Campaigns(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Campaigns rename(Name name) {
        return new Campaigns(name, null);
    }

    /**
     * Rename this table
     */
    @Override
    public Campaigns rename(Table<?> name) {
        return new Campaigns(name.getQualifiedName(), null);
    }

    // -------------------------------------------------------------------------
    // Row17 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row17<ULong, UUID, ULong, ULong, ULong, String, String, CampaignsStatus, CampaignsIsFavourite, CampaignsEmailThreads, String, String, LocalDateTime, LocalDateTime, JSON, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row17) super.fieldsRow();
    }

    /**
     * Convenience mapping calling {@link SelectField#convertFrom(Function)}.
     */
    public <U> SelectField<U> mapping(Function17<? super ULong, ? super UUID, ? super ULong, ? super ULong, ? super ULong, ? super String, ? super String, ? super CampaignsStatus, ? super CampaignsIsFavourite, ? super CampaignsEmailThreads, ? super String, ? super String, ? super LocalDateTime, ? super LocalDateTime, ? super JSON, ? super LocalDateTime, ? super LocalDateTime, ? extends U> from) {
        return convertFrom(Records.mapping(from));
    }

    /**
     * Convenience mapping calling {@link SelectField#convertFrom(Class,
     * Function)}.
     */
    public <U> SelectField<U> mapping(Class<U> toType, Function17<? super ULong, ? super UUID, ? super ULong, ? super ULong, ? super ULong, ? super String, ? super String, ? super CampaignsStatus, ? super CampaignsIsFavourite, ? super CampaignsEmailThreads, ? super String, ? super String, ? super LocalDateTime, ? super LocalDateTime, ? super JSON, ? super LocalDateTime, ? super LocalDateTime, ? extends U> from) {
        return convertFrom(toType, Records.mapping(from));
    }
}
